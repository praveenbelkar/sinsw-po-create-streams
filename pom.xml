<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>education.nsw.sinsw.streams</groupId>
  <artifactId>po-create-processor</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <properties>
    <avro.version>1.10.0</avro.version>
    <cloudevents.sdk.version>2.0.0</cloudevents.sdk.version>
    <compiler-plugin.version>3.8.1</compiler-plugin.version>
    <confluent.version>6.2.0</confluent.version>
    <maven.compiler.parameters>true</maven.compiler.parameters>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <openapi.codegen.version>5.1.0</openapi.codegen.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <quarkus-plugin.version>2.3.0.Final</quarkus-plugin.version>
    <quarkus.platform.artifact-id>quarkus-universe-bom</quarkus.platform.artifact-id>
    <quarkus.platform.group-id>io.quarkus</quarkus.platform.group-id>
    <quarkus.platform.version>2.3.0.Final</quarkus.platform.version>
    <schema.registry.url>http://172.16.46.58:8081</schema.registry.url>
    <schema.registry.basic.auth>user:pass</schema.registry.basic.auth>
    <surefire-plugin.version>3.0.0-M5</surefire-plugin.version>
    <swagger.codegen.version>3.0.25</swagger.codegen.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>${quarkus.platform.artifact-id}</artifactId>
        <version>${quarkus.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-kafka-streams</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-arc</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-jsonb</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.19.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-streams-avro-serde</artifactId>
      <version>${confluent.version}</version>
    </dependency>
    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-json-schema-serializer</artifactId>
      <version>${confluent.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.scala-lang/scala-library -->
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>2.13.6</version>
    </dependency>

    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-schema-registry-client</artifactId>
      <version>${confluent.version}</version>
    </dependency>
    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-streams-json-schema-serde</artifactId>
      <!--<version>6.2.1</version> -->
      <version>${confluent.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-streams-test-utils</artifactId>
      <version>2.7.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>3.9.0</version>
    </dependency>
    <dependency>
      <groupId>io.cloudevents</groupId>
      <artifactId>cloudevents-kafka</artifactId>
      <version>${cloudevents.sdk.version}</version>
    </dependency>
    <dependency>
      <groupId>io.cloudevents</groupId>
      <artifactId>cloudevents-json-jackson</artifactId>
      <version>${cloudevents.sdk.version}</version>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>kafka</artifactId>
      <version>1.15.2</version>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>1.15.3</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.11.0</version>
    </dependency>

    <dependency>
      <groupId>education.nsw.sinsw.streams</groupId>
      <artifactId>sinsw-stream-common</artifactId>
      <version>1.0.0-SNAPSHOT</version>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <id>confluent</id>
      <url>https://packages.confluent.io/maven/</url>
    </repository>
    <repository>
      <id>nexus-snapshots</id>
      <name>ICC Snapshots</name>
      <url>http://nexus-iccdevops.apps.d0.ocp.dev.education.nsw.gov.au/content/repositories/snapshots/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>confluent</id>
      <url>https://packages.confluent.io/maven/</url>
    </pluginRepository>
  </pluginRepositories>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro-maven-plugin</artifactId>
        <version>${avro.version}</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>schema</goal>
            </goals>
            <configuration>
              <sourceDirectory>src/main/resources/avro</sourceDirectory>
              <stringType>String</stringType>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus-plugin.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <!-- <goals>
                <goal>build</goal>
                <goal>generate-code</goal>
                <goal>generate-code-tests</goal>
            </goals> -->
            <goals>
              <goal>prepare</goal>
              <goal>prepare-tests</goal>
              <goal>build</goal>
            </goals>

          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <!--            <plugin>
                      <groupId>org.openapitools</groupId>
                      <artifactId>openapi-generator-maven-plugin</artifactId>
                      <version>${openapi.codegen.version}</version>
                      <inherited>false</inherited>
                      <executions>
                          <execution>
                              <id>generate-avro-v1</id>
                              <configuration>
                                  <generatorName>avro-schema</generatorName>
                                  <inputSpec>${project.basedir}/src/main/resources/schemas/v1/api.yaml</inputSpec>
                                  <output>${project.build.directory}/generated-sources/openapi/avro/v1</output>
                                  <packageName>education.nsw.xfi.avro_schemas.v1</packageName>
                              </configuration>
                              <goals>
                                  <goal>generate</goal>
                              </goals>
                          </execution>
                      </executions>
                  </plugin> -->
      <plugin>
        <groupId>org.jsonschema2pojo</groupId>
        <artifactId>jsonschema2pojo-maven-plugin</artifactId>
        <version>0.4.34</version>
        <configuration>
          <sourceDirectory>${basedir}/src/main/resources/schemas/v1/resolved</sourceDirectory>
          <targetPackage>education.sinsw.json</targetPackage>
          <useCommonsLang3>true</useCommonsLang3>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-schema-registry-maven-plugin</artifactId>
        <version>${confluent.version}</version>
        <inherited>false</inherited>
        <configuration>
          <userInfoConfig>${schema.registry.basic.auth}</userInfoConfig>
          <outputDirectory/>
          <schemaRegistryUrls>
            <param>${schema.registry.url}</param>
          </schemaRegistryUrls>
          <subjects>

            <!-- JSON schemas -->
            <!-- ****************************************************************************** -->
            <sinsw-systems-in-purchase-order-create-json-value>${project.basedir}/src/main/resources/schemas/v1/resolved/poCreateRequestJson.json</sinsw-systems-in-purchase-order-create-json-value>
            <!-- ****************************************************************************** -->
            <!--PoCreate SAP -->
            <sinsw-systems-sap-in-purchase-order-create-avro-value>${project.basedir}/src/main/resources/avro/sap/POCreation.avsc</sinsw-systems-sap-in-purchase-order-create-avro-value>
            <!-- Below one required only for Kafka client for test -->
            <education.sinsw.sap.inbound.avro_schemas.CreatePurchaserOrder>${project.basedir}/src/main/resources/avro/sap/POCreation.avsc</education.sinsw.sap.inbound.avro_schemas.CreatePurchaserOrder>
          </subjects>

          <schemaTypes>
            <sinsw-systems-in-purchase-order-create-json-value>JSON</sinsw-systems-in-purchase-order-create-json-value>
            <sinsw-systems-sap-in-purchase-order-create-avro-value>AVRO</sinsw-systems-sap-in-purchase-order-create-avro-value>
            <!-- Below one required only for Kafka client for test -->
            <education.sinsw.sap.inbound.avro_schemas.CreatePurchaserOrder>AVRO</education.sinsw.sap.inbound.avro_schemas.CreatePurchaserOrder>
          </schemaTypes>

        </configuration>
        <goals>
          <goal>register</goal>
          <goal>validate</goal>
        </goals>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <systemPropertyVariables>
                    <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                    <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                  </systemPropertyVariables>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <quarkus.package.type>native</quarkus.package.type>
      </properties>
    </profile>
  </profiles>
</project>